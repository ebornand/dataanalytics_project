{
    "type": [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        2,
        2,
        2,
        2,
        3,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "> ",
        "data_language <- c()",
        "> ",
        "data_baseline_mean <- c()",
        "> ",
        "data_baseline_sd <- c()",
        "> ",
        "data_reactivity <- c()",
        "> ",
        "data_habituation <- c()",
        "> ",
        "",
        "> ",
        "for (d in data_hedon_total) {",
        "+ ",
        "  language <- d[[1]]",
        "+ ",
        "  base <- d[[2]]",
        "+ ",
        "  habit <- d[[3]]",
        "+ ",
        "  data_language <- append(data_language, language)",
        "+ ",
        "  data_baseline_mean <- append(data_baseline_mean, mean(base$happiness))",
        "+ ",
        "  data_baseline_sd <- append(data_baseline_sd, sd(base$happiness))",
        "+ ",
        "  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1])",
        "+ ",
        "  data_habituation <-append(data_habituation, coef(lm(habit$happiness ~ habit$date, data = habit))[2])",
        "Error: unexpected symbol in:\n\"  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1])\n  data_habituation\"\n",
        "> ",
        "}",
        "Error: unexpected '}' in \"}\"\n",
        "> ",
        "data_language <- c()",
        "> ",
        "data_baseline_mean <- c()",
        "> ",
        "data_baseline_sd <- c()",
        "> ",
        "data_reactivity <- c()",
        "> ",
        "data_habituation <- c()",
        "> ",
        "",
        "> ",
        "for (d in data_hedon_total) {",
        "+ ",
        "  language <- d[[1]]",
        "+ ",
        "  base <- d[[2]]",
        "+ ",
        "  habit <- d[[3]]",
        "+ ",
        "  data_language <- append(data_language, language)",
        "+ ",
        "  data_baseline_mean <- append(data_baseline_mean, mean(base$happiness))",
        "+ ",
        "  data_baseline_sd <- append(data_baseline_sd, sd(base$happiness))",
        "+ ",
        "  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1])",
        "+ ",
        "  data_habituation <-append(data_habituation, coef(lm(habit$happiness ~ habit$date, data = habit))[2])",
        "Error: unexpected symbol in:\n\"  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1])\n  data_habituation\"\n",
        "> ",
        "}",
        "Error: unexpected '}' in \"}\"\n",
        "> ",
        "#creating final data frame",
        "> ",
        "data_language <- c()",
        "> ",
        "data_baseline_mean <- c()",
        "> ",
        "data_baseline_sd <- c()",
        "> ",
        "data_reactivity <- c()",
        "> ",
        "data_habituation <- c()",
        "> ",
        "",
        "> ",
        "for (d in data_hedon_total) {",
        "+ ",
        "  language <- d[[1]]",
        "+ ",
        "  base <- d[[2]]",
        "+ ",
        "  habit <- d[[3]]",
        "+ ",
        "  data_language <- append(data_language, language)",
        "+ ",
        "  data_baseline_mean <- append(data_baseline_mean, mean(base$happiness))",
        "+ ",
        "  data_baseline_sd <- append(data_baseline_sd, sd(base$happiness))",
        "+ ",
        "  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1])",
        "+ ",
        "  data_habituation <-append(data_habituation, coef(lm(habit$happiness ~ habit$date, data = habit))[2])",
        "Error: unexpected symbol in:\n\"  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1])\n  data_habituation\"\n",
        "> ",
        "}",
        "Error: unexpected '}' in \"}\"\n",
        "> ",
        "data_language <- c()",
        "> ",
        "data_baseline_mean <- c()",
        "> ",
        "data_baseline_sd <- c()",
        "> ",
        "data_reactivity <- c()",
        "> ",
        "data_habituation <- c()",
        "> ",
        "for (d in data_hedon_total) {",
        "+ ",
        "  base <- d[[2]]",
        "+ ",
        "  language <- d[[1]]",
        "+ ",
        "language",
        "+ ",
        "> ",
        "language",
        "Error: object 'language' not found\n",
        "> ",
        "d",
        "Error: object 'd' not found\n",
        "> ",
        "  data_language <- append(data_language, language)",
        "Error in append(data_language, language) : object 'language' not found\n",
        "> ",
        "for (d in data_hedon_total) {",
        "+ ",
        "  base <- d[[2]]",
        "+ ",
        "  habit <- d[[3]]",
        "+ ",
        "  data_language <- append(data_language, language)",
        "+ ",
        "  data_baseline_mean <- append(data_baseline_mean, mean(base$happiness))",
        "+ ",
        "  data_baseline_sd <- append(data_baseline_sd, sd(base$happiness))",
        "+ ",
        "  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1])",
        "+ ",
        "  data_habituation <-append(data_habituation, coef(lm(habit$happiness ~ habit$date, data = habit))[2])",
        "Error: unexpected symbol in:\n\"  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1])\n  data_habituation\"\n",
        "> ",
        "}",
        "Error: unexpected '}' in \"}\"\n",
        "> ",
        "",
        "> ",
        "hedonometer_data <- data.frame(data_language, data_baseline_mean, data_baseline_sd, data_reactivity, data_habituation)",
        "> ",
        "?data_hedon_total[[1]][[3]]$happiness[1]",
        "Error in .helpForCall(topicExpr, parent.frame()) : \n  keine Dokumentation für Funktion ‘[’ und Signatur ‘x = \"numeric\", i = \"numeric\", j = \"missing\", drop = \"logical\"’\n",
        "In addition: ",
        "Warning message:\n",
        "In .helpForCall(topicExpr, parent.frame()) :",
        "\n ",
        " keine Methode für Funktion ‘[’ und Signatur ‘x = \"numeric\", i = \"numeric\", j = \"missing\", drop = \"logical\"’ definiert\n",
        "> ",
        "data_hedon_total[[1]][[3]]$happiness[1]",
        "[1] 5.702\n",
        "> ",
        "data_language <- c()",
        "> ",
        "data_baseline_mean <- c()",
        "> ",
        "data_baseline_sd <- c()",
        "> ",
        "data_reactivity <- c()",
        "> ",
        "data_habituation <- c()",
        "> ",
        "",
        "> ",
        "for (d in data_hedon_total) {",
        "+ ",
        "  language <- d[[1]]",
        "+ ",
        "  base <- d[[2]]",
        "+ ",
        "  habit <- d[[3]]",
        "+ ",
        "  data_language <- append(data_language, language)",
        "+ ",
        "  data_baseline_mean <- append(data_baseline_mean, mean(base$happiness))",
        "+ ",
        "  data_baseline_sd <- append(data_baseline_sd, sd(base$happiness))",
        "+ ",
        "  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1]))",
        "+ ",
        "  data_habituation <-append(data_habituation, coef(lm(habit$happiness ~ habit$date, data = habit))[2])",
        "+ ",
        "}",
        "> ",
        "hedonometer_data <- data.frame(data_language, data_baseline_mean, data_baseline_sd, data_reactivity, data_habituation)",
        "> ",
        "View(hedonometer_data)",
        "> ",
        "data_hedon_total <- list(list(\"english\", data_en_base, data_en_habit), ",
        "+ ",
        "                         list(\"german\", data_de_base, data_de_habit), ",
        "+ ",
        "                         list(\"russian\", data_ru_base, data_ru_habit), ",
        "+ ",
        "                         list(\"spanish\", data_es_base, data_es_habit), ",
        "+ ",
        "                         list(\"portuguese\", data_pt_base, data_pt_habit), ",
        "+ ",
        "                         list(\"french\", data_fr_base, data_fr_habit), ",
        "+ ",
        "                         list(\"arabic\", data_ar_base, data_ar_habit), ",
        "+ ",
        "                         list(\"ukrainian\", data_ua_base, data_ua_habit))",
        "> ",
        "source(\"code/JSON_handler.R\")",
        "> ",
        "",
        "> ",
        "#English",
        "> ",
        "en_habit_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=en_all&date__gte=2022-02-24&limit=1000\")",
        "> ",
        "en_base_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=en_all&date__gte=2022-01-24&limit=31\")",
        "> ",
        "",
        "> ",
        "data_en_habit <- function.createHedonDataFrame(en_habit_json)",
        "> ",
        "data_en_base <- function.createHedonDataFrame(en_base_json)",
        "> ",
        "",
        "> ",
        "#German",
        "> ",
        "de_habit_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=de_all&date__gte=2022-02-24&limit=1000\")",
        "> ",
        "de_base_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=de_all&date__gte=2022-01-24&limit=31\")",
        "> ",
        "",
        "> ",
        "data_de_habit <- function.createHedonDataFrame(de_habit_json)",
        "> ",
        "data_de_base <- function.createHedonDataFrame(de_base_json)",
        "> ",
        "",
        "> ",
        "#Russian",
        "> ",
        "ru_habit_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=ru_all&date__gte=2022-02-24&limit=1000\")",
        "> ",
        "ru_base_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=ru_all&date__gte=2022-01-24&limit=31\")",
        "> ",
        "",
        "> ",
        "data_ru_habit <- function.createHedonDataFrame(ru_habit_json)",
        "> ",
        "data_ru_base <- function.createHedonDataFrame(ru_base_json)",
        "> ",
        "",
        "> ",
        "#Spanish",
        "> ",
        "es_habit_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=es_all&date__gte=2022-02-24&limit=1000\")",
        "> ",
        "es_base_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=es_all&date__gte=2022-01-24&limit=31\")",
        "> ",
        "",
        "> ",
        "data_es_habit <- function.createHedonDataFrame(es_habit_json)",
        "> ",
        "data_es_base <- function.createHedonDataFrame(es_base_json)",
        "> ",
        "",
        "> ",
        "#Portuguese",
        "> ",
        "pt_habit_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=pt_all&date__gte=2022-02-24&limit=1000\")",
        "> ",
        "pt_base_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=pt_all&date__gte=2022-01-24&limit=31\")",
        "> ",
        "",
        "> ",
        "data_pt_habit <- function.createHedonDataFrame(pt_habit_json)",
        "> ",
        "data_pt_base <- function.createHedonDataFrame(pt_base_json)",
        "> ",
        "",
        "> ",
        "#French",
        "> ",
        "fr_habit_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=fr_all&date__gte=2022-02-24&limit=1000\")",
        "> ",
        "fr_base_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=fr_all&date__gte=2022-01-24&limit=31\")",
        "> ",
        "",
        "> ",
        "data_fr_habit <- function.createHedonDataFrame(fr_habit_json)",
        "> ",
        "data_fr_base <- function.createHedonDataFrame(fr_base_json)",
        "> ",
        "",
        "> ",
        "#Arabic",
        "> ",
        "ar_habit_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=ar_all&date__gte=2022-02-24&limit=1000\")",
        "> ",
        "ar_base_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=ar_all&date__gte=2022-01-24&limit=31\")",
        "> ",
        "",
        "> ",
        "data_ar_habit <- function.createHedonDataFrame(ar_habit_json)",
        "> ",
        "data_ar_base <- function.createHedonDataFrame(ar_base_json)",
        "> ",
        "",
        "> ",
        "#Ukrainian",
        "> ",
        "ua_habit_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=uk_all&date__gte=2022-02-24&limit=1000\")",
        "> ",
        "ua_base_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=uk_all&date__gte=2022-01-24&limit=31\")",
        "> ",
        "",
        "> ",
        "data_ua_habit <- function.createHedonDataFrame(ua_habit_json)",
        "> ",
        "data_ua_base <- function.createHedonDataFrame(ua_base_json)",
        "> ",
        "",
        "> ",
        "data_hedon_total <- list(list(\"english\", data_en_base, data_en_habit), ",
        "+ ",
        "                         list(\"german\", data_de_base, data_de_habit), ",
        "+ ",
        "                         list(\"russian\", data_ru_base, data_ru_habit), ",
        "+ ",
        "                         list(\"spanish\", data_es_base, data_es_habit), ",
        "+ ",
        "                         list(\"portuguese\", data_pt_base, data_pt_habit), ",
        "+ ",
        "                         list(\"french\", data_fr_base, data_fr_habit), ",
        "+ ",
        "                         list(\"arabic\", data_ar_base, data_ar_habit), ",
        "+ ",
        "                         list(\"ukrainian\", data_ua_base, data_ua_habit))",
        "> ",
        "",
        "> ",
        "#creating final data frame",
        "> ",
        "data_language <- c()",
        "> ",
        "data_baseline_mean <- c()",
        "> ",
        "data_baseline_sd <- c()",
        "> ",
        "data_reactivity <- c()",
        "> ",
        "data_habituation <- c()",
        "> ",
        "",
        "> ",
        "for (d in data_hedon_total) {",
        "+ ",
        "  language <- d[[1]]",
        "+ ",
        "  base <- d[[2]]",
        "+ ",
        "  habit <- d[[3]]",
        "+ ",
        "  data_language <- append(data_language, language)",
        "+ ",
        "  data_baseline_mean <- append(data_baseline_mean, mean(base$happiness))",
        "+ ",
        "  data_baseline_sd <- append(data_baseline_sd, sd(base$happiness))",
        "+ ",
        "  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1]))",
        "+ ",
        "  data_habituation <-append(data_habituation, coef(lm(habit$happiness ~ habit$date, data = habit))[2])",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "hedonometer_data <- data.frame(data_language, data_baseline_mean, data_baseline_sd, data_reactivity, data_habituation)",
        "> ",
        "View(hedonometer_data)",
        "> ",
        "languages_iso2 <- c(\"en\", \"de\", \"ru\", \"es\", \"pt\", \"fr\", \"ar\", \"id\", \"ko\")",
        "> ",
        "data_hedon_total <- list()",
        "> ",
        "for (l in languages_iso2) {",
        "+ ",
        "  base_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-02-24&limit=1000\")))",
        "+ ",
        "  habit_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-01-24&limit=31\")))",
        "+ ",
        "  base_data <- function.createHedonDataFrame(base_json_data)",
        "+ ",
        "  habit_data <- function.createHedonDataFrame(habit_json_data)",
        "+ ",
        "  data_hedon_total <- append(data_hedon_total, list(l, base_data, habit_data))",
        "+ ",
        "}",
        "Error in file(con, \"r\") : \n  cannot open the connection to 'http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title= en _all&date__gte=2022-02-24&limit=1000'\n",
        "In addition: ",
        "Warning message:\n",
        "In file(con, \"r\") :",
        "\n ",
        " URL 'http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title= en _all&date__gte=2022-02-24&limit=1000': status was 'URL using bad/illegal format or missing URL'\n",
        "> ",
        "",
        "> ",
        "#creating final data frame",
        "> ",
        "data_language <- c()",
        "> ",
        "data_baseline_mean <- c()",
        "> ",
        "data_baseline_sd <- c()",
        "> ",
        "data_reactivity <- c()",
        "> ",
        "data_habituation <- c()",
        "> ",
        "",
        "> ",
        "for (d in data_hedon_total) {",
        "+ ",
        "  language <- d[[1]]",
        "+ ",
        "  base <- d[[2]]",
        "+ ",
        "  habit <- d[[3]]",
        "+ ",
        "  data_language <- append(data_language, language)",
        "+ ",
        "  data_baseline_mean <- append(data_baseline_mean, mean(base$happiness))",
        "+ ",
        "  data_baseline_sd <- append(data_baseline_sd, sd(base$happiness))",
        "+ ",
        "  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1]))",
        "+ ",
        "  data_habituation <-append(data_habituation, coef(lm(habit$happiness ~ habit$date, data = habit))[2])",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "hedonometer_data <- data.frame(data_language, data_baseline_mean, data_baseline_sd, data_reactivity, data_habituation)",
        "> ",
        "languages_iso2 <- c(\"en\", \"de\", \"ru\", \"es\", \"pt\", \"fr\", \"ar\", \"id\", \"ko\")",
        "> ",
        "data_hedon_total <- list()",
        "> ",
        "for (l in languages_iso2) {",
        "+ ",
        "  base_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-02-24&limit=1000\")))",
        "+ ",
        "  habit_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-01-24&limit=31\")))",
        "+ ",
        "  base_data <- function.createHedonDataFrame(base_json_data)",
        "+ ",
        "  habit_data <- function.createHedonDataFrame(habit_json_data)",
        "+ ",
        "  data_hedon_total <- append(data_hedon_total, list(l, base_data, habit_data))",
        "+ ",
        "}",
        "Error in file(con, \"r\") : \n  cannot open the connection to 'http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title= en _all&date__gte=2022-02-24&limit=1000'\n",
        "In addition: ",
        "Warning message:\n",
        "In file(con, \"r\") :",
        "\n ",
        " URL 'http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title= en _all&date__gte=2022-02-24&limit=1000': status was 'URL using bad/illegal format or missing URL'\n",
        "> ",
        "",
        "> ",
        "#creating final data frame",
        "> ",
        "data_language <- c()",
        "> ",
        "data_baseline_mean <- c()",
        "> ",
        "data_baseline_sd <- c()",
        "> ",
        "data_reactivity <- c()",
        "> ",
        "data_habituation <- c()",
        "> ",
        "",
        "> ",
        "for (d in data_hedon_total) {",
        "+ ",
        "  language <- d[[1]]",
        "+ ",
        "  base <- d[[2]]",
        "+ ",
        "  habit <- d[[3]]",
        "+ ",
        "  data_language <- append(data_language, language)",
        "+ ",
        "  data_baseline_mean <- append(data_baseline_mean, mean(base$happiness))",
        "+ ",
        "  data_baseline_sd <- append(data_baseline_sd, sd(base$happiness))",
        "+ ",
        "  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1]))",
        "+ ",
        "  data_habituation <-append(data_habituation, coef(lm(habit$happiness ~ habit$date, data = habit))[2])",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "hedonometer_data <- data.frame(data_language, data_baseline_mean, data_baseline_sd, data_reactivity, data_habituation)",
        "> ",
        "View(hedonometer_data)",
        "> ",
        "languages_iso2 <- c(\"en\", \"de\", \"ru\", \"es\", \"pt\", \"fr\", \"ar\", \"id\", \"ko\")",
        "> ",
        "data_hedon_total <- list()",
        "> ",
        "for (l in languages_iso2) {",
        "+ ",
        "  base_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-02-24&limit=1000\")))",
        "+ ",
        "  habit_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-01-24&limit=31\")))",
        "+ ",
        "  base_data <- function.createHedonDataFrame(base_json_data)",
        "+ ",
        "  habit_data <- function.createHedonDataFrame(habit_json_data)",
        "+ ",
        "  data_hedon_total <- append(data_hedon_total, list(l, base_data, habit_data))",
        "+ ",
        "}",
        "Error in file(con, \"r\") : \n  cannot open the connection to 'http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title= en _all&date__gte=2022-02-24&limit=1000'\n",
        "In addition: ",
        "Warning message:\n",
        "In file(con, \"r\") :",
        "\n ",
        " URL 'http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title= en _all&date__gte=2022-02-24&limit=1000': status was 'URL using bad/illegal format or missing URL'\n",
        "> ",
        "capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                   l, \"_all&date__gte=2022-02-24&limit=1000\"))",
        "[1] \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title= en _all&date__gte=2022-02-24&limit=1000\"\n",
        "> ",
        "for (l in languages_iso2) {",
        "+ ",
        "  base_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-02-24&limit=1000\", sep = \"\")))",
        "+ ",
        "  habit_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-01-24&limit=31\", sep = \"\")))",
        "+ ",
        "  base_data <- function.createHedonDataFrame(base_json_data)",
        "+ ",
        "  habit_data <- function.createHedonDataFrame(habit_json_data)",
        "+ ",
        "  data_hedon_total <- append(data_hedon_total, list(l, base_data, habit_data))",
        "+ ",
        "}",
        "> ",
        "#creating final data frame",
        "> ",
        "data_language <- c()",
        "> ",
        "data_baseline_mean <- c()",
        "> ",
        "data_baseline_sd <- c()",
        "> ",
        "data_reactivity <- c()",
        "> ",
        "data_habituation <- c()",
        "> ",
        "",
        "> ",
        "for (d in data_hedon_total) {",
        "+ ",
        "  language <- d[[1]]",
        "+ ",
        "  base <- d[[2]]",
        "+ ",
        "  habit <- d[[3]]",
        "+ ",
        "  data_language <- append(data_language, language)",
        "+ ",
        "  data_baseline_mean <- append(data_baseline_mean, mean(base$happiness))",
        "+ ",
        "  data_baseline_sd <- append(data_baseline_sd, sd(base$happiness))",
        "+ ",
        "  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1]))",
        "+ ",
        "  data_habituation <-append(data_habituation, coef(lm(habit$happiness ~ habit$date, data = habit))[2])",
        "+ ",
        "}",
        "Error in d[[2]] : subscript out of bounds\n",
        "> ",
        "",
        "> ",
        "hedonometer_data <- data.frame(data_language, data_baseline_mean, data_baseline_sd, data_reactivity, data_habituation)",
        "> ",
        "View(data_hedon_total)",
        "> ",
        "for (d in data_hedon_total) {",
        "+ ",
        "  language <- d[[1]]",
        "+ ",
        "  base <- d[[2]]",
        "+ ",
        "  habit <- d[[3]]",
        "+ ",
        "  data_language <- append(data_language, language)",
        "+ ",
        "  data_baseline_mean <- append(data_baseline_mean, mean(base$happiness))",
        "+ ",
        "  data_baseline_sd <- append(data_baseline_sd, sd(base$happiness))",
        "+ ",
        "  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1]))",
        "+ ",
        "  data_habituation <-append(data_habituation, coef(lm(habit$happiness ~ habit$date, data = habit))[2])",
        "+ ",
        "}",
        "Error in d[[2]] : subscript out of bounds\n",
        "> ",
        "data_hedon_total[1]",
        "[[1]]\n[1] \"en\"\n\n",
        "> ",
        "data_hedon_total[[1]]",
        "[1] \"en\"\n",
        "> ",
        "languages_iso2 <- c(\"en\", \"de\", \"ru\", \"es\", \"pt\", \"fr\", \"ar\", \"id\", \"ko\")",
        "> ",
        "data_hedon_total <- list()",
        "> ",
        "for (l in languages_iso2) {",
        "+ ",
        "  base_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-02-24&limit=1000\", sep = \"\")))",
        "+ ",
        "  habit_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-01-24&limit=31\", sep = \"\")))",
        "+ ",
        "  base_data <- function.createHedonDataFrame(base_json_data)",
        "+ ",
        "  habit_data <- function.createHedonDataFrame(habit_json_data)",
        "+ ",
        "  data_hedon_total[[length(data_hedon_total)+1]] <- list(l, base_data, habit_data)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "languages_iso2 <- c(\"en\", \"de\", \"ru\", \"es\", \"pt\", \"fr\", \"ar\", \"id\", \"ko\")",
        "> ",
        "data_hedon_total <- list()",
        "> ",
        "for (l in languages_iso2) {",
        "+ ",
        "  base_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-02-24&limit=1000\", sep = \"\")))",
        "+ ",
        "  habit_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-01-24&limit=31\", sep = \"\")))",
        "+ ",
        "  base_data <- function.createHedonDataFrame(base_json_data)",
        "+ ",
        "  habit_data <- function.createHedonDataFrame(habit_json_data)",
        "+ ",
        "  data_hedon_total[[length(data_hedon_total)+1]] <- list(l, base_data, habit_data)",
        "+ ",
        "}",
        "> ",
        "languages_iso2 <- c(\"en\", \"de\", \"ru\", \"es\", \"pt\", \"fr\", \"ar\", \"id\", \"ko\")",
        "> ",
        "data_hedon_total <- list()",
        "> ",
        "for (l in languages_iso2) {",
        "+ ",
        "  base_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-02-24&limit=1000\", sep = \"\")))",
        "+ ",
        "  habit_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-01-24&limit=31\", sep = \"\")))",
        "+ ",
        "  base_data <- function.createHedonDataFrame(base_json_data)",
        "+ ",
        "  habit_data <- function.createHedonDataFrame(habit_json_data)",
        "+ ",
        "  data_hedon_total[[length(data_hedon_total)+1]] <- list(l, base_data, habit_data)",
        "+ ",
        "}",
        "Error in function.createHedonDataFrame(base_json_data) : \n  could not find function \"function.createHedonDataFrame\"\n",
        "> ",
        "source(\"code/JSON_handler.R\")",
        "> ",
        "",
        "> ",
        "languages_iso2 <- c(\"en\", \"de\", \"ru\", \"es\", \"pt\", \"fr\", \"ar\", \"id\", \"ko\")",
        "> ",
        "data_hedon_total <- list()",
        "> ",
        "for (l in languages_iso2) {",
        "+ ",
        "  base_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-02-24&limit=1000\", sep = \"\")))",
        "+ ",
        "  habit_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-01-24&limit=31\", sep = \"\")))",
        "+ ",
        "  base_data <- function.createHedonDataFrame(base_json_data)",
        "+ ",
        "  habit_data <- function.createHedonDataFrame(habit_json_data)",
        "+ ",
        "  data_hedon_total[[length(data_hedon_total)+1]] <- list(l, base_data, habit_data)",
        "+ ",
        "}",
        "> ",
        "View(data_hedon_total)",
        "> ",
        "data_language <- c()",
        "> ",
        "data_baseline_mean <- c()",
        "> ",
        "data_baseline_sd <- c()",
        "> ",
        "data_reactivity <- c()",
        "> ",
        "data_habituation <- c()",
        "> ",
        "",
        "> ",
        "for (d in data_hedon_total) {",
        "+ ",
        "  language <- d[[1]]",
        "+ ",
        "  base <- d[[2]]",
        "+ ",
        "  habit <- d[[3]]",
        "+ ",
        "  data_language <- append(data_language, language)",
        "+ ",
        "  data_baseline_mean <- append(data_baseline_mean, mean(base$happiness))",
        "+ ",
        "  data_baseline_sd <- append(data_baseline_sd, sd(base$happiness))",
        "+ ",
        "  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1]))",
        "+ ",
        "  data_habituation <-append(data_habituation, coef(lm(habit$happiness ~ habit$date, data = habit))[2])",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "hedonometer_data <- data.frame(data_language, data_baseline_mean, data_baseline_sd, data_reactivity, data_habituation)",
        "> ",
        "View(hedonometer_data)",
        "> ",
        "data_hedon_total[[1]][[3]]$happiness[1]",
        "[1] 6.059\n",
        "> ",
        "data_hedon_total[[1]][[3]]$happiness",
        " [1] 6.059 6.063 6.072 6.065 6.054 6.089 6.087 6.080 6.042 6.054 6.048 6.047 6.045 6.059 6.057 6.061 6.074 6.082 6.081 6.066 6.119 6.147 6.064 6.057 6.069 6.052\n[27] 6.060 6.070 6.049 6.056 6.033\n",
        "> ",
        "for (l in languages_iso2) {",
        "+ ",
        "  habit_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-02-24&limit=1000\", sep = \"\")))",
        "+ ",
        "  base_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-01-24&limit=31\", sep = \"\")))",
        "+ ",
        "  base_data <- function.createHedonDataFrame(base_json_data)",
        "+ ",
        "  habit_data <- function.createHedonDataFrame(habit_json_data)",
        "+ ",
        "  data_hedon_total[[length(data_hedon_total)+1]] <- list(l, base_data, habit_data)",
        "+ ",
        "}",
        "> ",
        "data_language <- c()",
        "> ",
        "data_baseline_mean <- c()",
        "> ",
        "data_baseline_sd <- c()",
        "> ",
        "data_reactivity <- c()",
        "> ",
        "data_habituation <- c()",
        "> ",
        "",
        "> ",
        "for (d in data_hedon_total) {",
        "+ ",
        "  language <- d[[1]]",
        "+ ",
        "  base <- d[[2]]",
        "+ ",
        "  habit <- d[[3]]",
        "+ ",
        "  data_language <- append(data_language, language)",
        "+ ",
        "  data_baseline_mean <- append(data_baseline_mean, mean(base$happiness))",
        "+ ",
        "  data_baseline_sd <- append(data_baseline_sd, sd(base$happiness))",
        "+ ",
        "  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1]))",
        "+ ",
        "  data_habituation <-append(data_habituation, coef(lm(habit$happiness ~ habit$date, data = habit))[2])",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "hedonometer_data <- data.frame(data_language, data_baseline_mean, data_baseline_sd, data_reactivity, data_habituation)",
        "> ",
        "View(hedonometer_data)",
        "> ",
        "hedonometer_data <- NA",
        "> ",
        "hedonometer_data <- data.frame(data_language, data_baseline_mean, data_baseline_sd, data_reactivity, data_habituation)",
        "> ",
        "View(hedonometer_data)",
        "> ",
        "data_hedon_total <- na",
        "Error: object 'na' not found\n",
        "> ",
        "data_hedon_total <- _NA",
        "Error: unexpected numeric constant in \"data_hedon_total <- _NA\"\n",
        "> ",
        "data_hedon_total <- NA",
        "> ",
        "languages_iso2 <- c(\"en\", \"de\", \"ru\", \"es\", \"pt\", \"fr\", \"ar\", \"id\", \"ko\")",
        "> ",
        "data_hedon_total <- list()",
        "> ",
        "for (l in languages_iso2) {",
        "+ ",
        "  habit_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-02-24&limit=1000\", sep = \"\")))",
        "+ ",
        "  base_json_data <- fromJSON(file = capture.output(cat(\"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=\", ",
        "+ ",
        "                                                       l, \"_all&date__gte=2022-01-24&limit=31\", sep = \"\")))",
        "+ ",
        "  base_data <- function.createHedonDataFrame(base_json_data)",
        "+ ",
        "  habit_data <- function.createHedonDataFrame(habit_json_data)",
        "+ ",
        "  data_hedon_total[[length(data_hedon_total)+1]] <- list(l, base_data, habit_data)",
        "+ ",
        "}",
        "> ",
        "#creating final data frame",
        "> ",
        "data_language <- c()",
        "> ",
        "data_baseline_mean <- c()",
        "> ",
        "data_baseline_sd <- c()",
        "> ",
        "data_reactivity <- c()",
        "> ",
        "data_habituation <- c()",
        "> ",
        "",
        "> ",
        "for (d in data_hedon_total) {",
        "+ ",
        "  language <- d[[1]]",
        "+ ",
        "  base <- d[[2]]",
        "+ ",
        "  habit <- d[[3]]",
        "+ ",
        "  data_language <- append(data_language, language)",
        "+ ",
        "  data_baseline_mean <- append(data_baseline_mean, mean(base$happiness))",
        "+ ",
        "  data_baseline_sd <- append(data_baseline_sd, sd(base$happiness))",
        "+ ",
        "  data_reactivity <- append(data_reactivity, (mean(base$happiness) - habit$happiness[1]))",
        "+ ",
        "  data_habituation <-append(data_habituation, coef(lm(habit$happiness ~ habit$date, data = habit))[2])",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "hedonometer_data <- data.frame(data_language, data_baseline_mean, data_baseline_sd, data_reactivity, data_habituation)",
        "> ",
        "View(hedonometer_data)",
        "> ",
        "library(\"rmarkdiwn\")",
        "Error in library(\"rmarkdiwn\") : es gibt kein Paket namens ‘rmarkdiwn’\n",
        "> ",
        "library(\"rmarkdo$wn\")",
        "Error in library(\"rmarkdo$wn\") : es gibt kein Paket namens ‘rmarkdo$wn’\n",
        "> ",
        "library(\"rmarkdown\")",
        "> ",
        "render_site()",
        "\nRendering: ./about.Rmd\n",
        "\r  |                                                                                                                                                               \r  |                                                                                                                                                         |   0%\r  |                                                                                                                                                               \r  |...................................................                                                                                                      |  33%",
        "\n  ordinary text without R code\n\n\r  |                                                                                                                                                               \r  |......................................................................................................                                                   |  67%\nlabel: setup (with options) \nList of 1\n $ include: logi FALSE\n\n\r  |                                                                                                                                                               ",
        "\r  |.........................................................................................................................................................| 100%\n  ordinary text without R code\n\n\n\"C:/Program Files/RStudio/bin/quarto/bin/pandoc\" +RTS -K512m -RTS about.knit.md --to html5 --from markdown+autolink_bare_uris+tex_math_single_backslash --output about.html --lua-filter \"C:\\Users\\roman\\AppData\\Local\\R\\win-library\\4.2\\rmarkdown\\rmarkdown\\lua\\pagebreak.lua\" --lua-filter \"C:\\Users\\roman\\AppData\\Local\\R\\win-library\\4.2\\rmarkdown\\rmarkdown\\lua\\latex-div.lua\" --standalone --variable toc-float=1 --highlight-style \"C:/Users/roman/AppData/Local/R/win-library/4.2/distill/rmarkdown/templates/distill_article/resources/arrow.theme\" --template \"C:\\Users\\roman\\AppData\\Local\\R\\win-library\\4.2\\distill\\rmarkdown\\templates\\distill_article\\resources\\default.html\" \"--metadata=link-citations:true\" --include-in-header \"C:\\Users\\roman\\AppData\\Local\\Temp\\RtmpUZnANP\\file58fc376295fhtml\" --include-in-header \"C:\\Users\\roman\\AppData\\Local\\Temp\\RtmpUZnANP\\file58fc2ee65932html\" --include-in-header \"C:\\Users\\roman\\AppData\\Local\\Temp\\RtmpUZnANP\\file58fc29554483html\" --include-in-header \"C:\\Users\\roman\\AppData\\Local\\Temp\\RtmpUZnANP\\file58fc25ed212dhtml\" --include-before-body \"C:\\Users\\roman\\AppData\\Local\\Temp\\RtmpUZnANP\\file58fc4705754bhtml\" --include-before-body \"C:\\Users\\roman\\AppData\\Local\\Temp\\RtmpUZnANP\\file58fc7f5b4848html\" --include-before-body \"C:\\Users\\roman\\AppData\\Local\\Temp\\RtmpUZnANP\\file58fc511ff01html\" --include-after-body \"C:\\Users\\roman\\AppData\\Local\\Temp\\RtmpUZnANP\\file58fc363f4885html\" --include-after-body \"C:\\Users\\roman\\AppData\\Local\\Temp\\RtmpUZnANP\\file58fc2fe39c0html\" --include-after-body \"C:\\Users\\roman\\AppData\\Local\\Temp\\RtmpUZnANP\\file58fc5ef23777html\" --mathjax --variable \"mathjax-url=https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" --include-in-header \"C:\\Users\\roman\\AppData\\Local\\Temp\\RtmpUZnANP\\rmarkdown-str58fc5599694a.html\" --include-in-header \"C:\\Users\\roman\\AppData\\Local\\Temp\\RtmpUZnANP\\file58fc122a591html\"",
        " \n",
        "\nRendering: ./index.Rmd\n",
        "\r  |                                                                                                                                                               \r  |                                                                                                                                                         |   0%\r  |                                                                                                                                                               \r  |..............                                                                                                                                           |   9%",
        "\n  ordinary text without R code\n\n\r  |                                                                                                                                                               \r  |............................                                                                                                                             |  18%\nlabel: setup (with options) \nList of 1\n $ include: logi FALSE\n\n\r  |                                                                                                                                                               ",
        "\r  |..........................................                                                                                                               |  27%\n  ordinary text without R code\n\n\r  |                                                                                                                                                               \r  |........................................................                                                                                                 |  36%",
        "\nlabel: unnamed-chunk-1 (with options) \nList of 1\n $ results: chr \"asis\"\n\n\r  |                                                                                                                                                               \r  |......................................................................                                                                                   |  45%\n  ordinary text without R code\n\n\r  |                                                                                                                                                               ",
        "\r  |...................................................................................                                                                      |  55%\nlabel: unnamed-chunk-2 (with options) \nList of 2\n $ echo: logi FALSE\n $ eval: logi FALSE\n\n\r  |                                                                                                                                                               \r  |.................................................................................................                                                        |  64%",
        "\nlabel: unnamed-chunk-3\n\r  |                                                                                                                                                               \r  |...............................................................................................................                                          |  73%\n  ordinary text without R code\n\n\r  |                                                                                                                                                               ",
        "\r  |.............................................................................................................................                            |  82%\nlabel: unnamed-chunk-4\n",
        "Error in eval(expr, envir, enclos) : object 'plot_de_habit' not found\n",
        "In addition: ",
        "Warning message:\n",
        "In readLines(\"text/home.txt\") :",
        "\n ",
        " incomplete final line found on 'text/home.txt'\n",
        "\n",
        "> ",
        "knitr::opts_chunk$set(echo = FALSE)",
        "> ",
        "",
        "> ",
        "# Learn more about creating websites with Distill at:",
        "> ",
        "# https://rstudio.github.io/distill/website.html",
        "> ",
        "",
        "> ",
        "install.packages(\"rjson\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"ggplot2\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "library(\"rjson\")",
        "> ",
        "library(\"ggplot2\")",
        "> ",
        "source(\"code/JSON_handler.R\")",
        "> ",
        "source(\"code/plotter.R\")",
        "> ",
        "",
        "> ",
        "de_habit_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=de_all&date__gte=2022-02-24&limit=1000\")",
        "> ",
        "de_base_json <- fromJSON(file = \"http://hedonometer.org/api/v1/happiness/?format=json&timeseries__title=de_all&date__gte=2022-01-24&limit=31\")",
        "> ",
        "",
        "> ",
        "data_de_habit <- function.createHedonDataFrame(de_habit_json)",
        "> ",
        "data_de_base <- function.createHedonDataFrame(de_base_json)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#creating a plot for the german language",
        "> ",
        "plot_de_habit <- function.basic_plot(data_de_habit)",
        "> ",
        "plot_de_base <- function.basic_plot(data_de_base)",
        "\nRestarting R session...\n\n"
    ]
}
{"frames":[{"func":"install.packages(\"rjson\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".rs.callAs(name, hook, original, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(tryCatch(f(...), error = function(e) {\n    cat(\"Error in \", name, \" : \", e$message, \"\\n\", sep = \"\")\n}), warning = function(w) {\n    if (getOption(\"warn\") >= 0)  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(f(...), error = function(e) {\n    cat(\"Error in \", name, \" : \", e$message, \"\\n\", sep = \"\")\n})","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"f(...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".rs.loadedPackageUpdates(pkgs)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"available.packages()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch({\n    download.file(url = paste0(repos, \"/PACKAGES.rds\"), destfile = dest, \n        method = method, cacheOK = FALSE, quiet = quiet, mode = \"wb\", \n        ...) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"download.file(url = paste0(repos, \"/PACKAGES.rds\"), destfile = dest, \n    method = method, cacheOK = FALSE, quiet = quiet, mode = \"wb\", \n    ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".signalSimpleWarning(\"InternetOpenUrl failed: 'Das Zeitlimit fÃ¼r den Vorgang wurde erreicht.'\", \n    base::quote(download.file(url = paste0(repos, \"/PACKAGES.rds\"), \n        destfile = dest, method = method, cacheOK = FALSE, quiet = quiet, \n        mode = \"wb\", ...)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withRestarts({\n    .Internal(.signalCondition(simpleWarning(msg, call), msg, \n        call))\n    .Internal(.dfltWarn(msg, call)) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"makeRestartList(...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"no loop for break/next, jumping to top level"}
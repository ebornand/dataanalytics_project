trade_datalist <- list()
for (i in 1:nrow(countries_capitals_and_more)) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
print(nrow(exports_ukr_x))
print(exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
if(nrow(exports_ukr_x) >= 0 && dim(imports_ukr_x)[1] != 0 && dim(tb_ukr_x)[1] != 0) {
trade_datalist[length(trade_datalist)+1] <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
}
}
trade_datalist <- list()
for (i in 1:nrow(countries_capitals_and_more)) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
print(nrow(exports_ukr_x))
if(nrow(exports_ukr_x) >= 0 && dim(imports_ukr_x)[1] != 0 && dim(tb_ukr_x)[1] != 0) {
trade_datalist[length(trade_datalist)+1] <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
}
}
trade_datalist <- list()
for (i in 1:nrow(countries_capitals_and_more)) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
print(nrow(exports_ukr_x))
if(nrow(exports_ukr_x) >= 0 && dim(imports_ukr_x)[1] != 0 && dim(tb_ukr_x)[1] != 0) {
print("fuck you")
trade_datalist[length(trade_datalist)+1] <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
}
}
View(exports_ukr)
trade_datalist <- list()
for (i in 1:nrow(countries_capitals_and_more)) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
print(nrow(exports_ukr_x))
if(nrow(exports_ukr_x) != "0" && dim(imports_ukr_x)[1] != "0" && dim(tb_ukr_x)[1] != "0") {
trade_datalist[length(trade_datalist)+1] <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
}
}
trade_datalist <- list()
for (i in 1:nrow(countries_capitals_and_more)) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
print(nrow(exports_ukr_x))
if(nrow(exports_ukr_x) != "0" && nrow(imports_ukr_x)[1] != "0" && nrow(tb_ukr_x)[1] != "0") {
trade_datalist[length(trade_datalist)+1] <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
}
}
trade_datalist <- list()
for (i in 1:nrow(countries_capitals_and_more)) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
print(country)
if(nrow(exports_ukr_x) != "0" && nrow(imports_ukr_x)[1] != "0" && nrow(tb_ukr_x)[1] != "0") {
trade_datalist[length(trade_datalist)+1] <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
}
}
trade_datalist <- list()
for (i in 1:nrow(countries_capitals_and_more)) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
print(country$obs)
if(nrow(exports_ukr_x) != "0" && nrow(imports_ukr_x)[1] != "0" && nrow(tb_ukr_x)[1] != "0") {
trade_datalist[length(trade_datalist)+1] <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
}
}
trade_datalist <- list()
for (i in 1:nrow(countries_capitals_and_more)) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
print(country$capital)
print(exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
if(nrow(exports_ukr_x) != "0" && nrow(imports_ukr_x)[1] != "0" && nrow(tb_ukr_x)[1] != "0") {
trade_datalist[length(trade_datalist)+1] <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
}
}
for (i in 1:nrow(countries_capitals_and_more)) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
print(country$capital)
print(exports_ukr_x$obs)
if(nrow(exports_ukr_x) != "0" && nrow(imports_ukr_x)[1] != "0" && nrow(tb_ukr_x)[1] != "0") {
trade_datalist[length(trade_datalist)+1] <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
}
}
trade_datalist <- list()
for (i in 1:nrow(countries_capitals_and_more)) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
print(country$country)
print(exports_ukr_x$obs)
test_country_fu <- country
if(nrow(exports_ukr_x) != "0" && nrow(imports_ukr_x)[1] != "0" && nrow(tb_ukr_x)[1] != "0") {
trade_datalist[length(trade_datalist)+1] <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
}
}
test_country_fu
trade_datalist <- list()
for (i in 1:nrow(countries_capitals_and_more)) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
print(country$country)
print(exports_ukr_x$obs)
test_country_fu <- exports_ukr_x$obs
if(nrow(exports_ukr_x) != "0" && nrow(imports_ukr_x)[1] != "0" && nrow(tb_ukr_x)[1] != "0") {
trade_datalist[length(trade_datalist)+1] <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
}
}
test_country_fu
test_country_fu[[1]]
test_country_fu[[2]]
test_country_fu[[1]]
test_country_fu[[1]][[2]]
test_country_fu[[1]][[2]][nrow(test_country_fu[[1]])]
test_country_fu[[1]][[2]][nrow(test_country_fu)]
countries_capitals_trade <- do.call(rbind, getTradeList())
getTradeList <- function() {
trade_datalist <- list()
for (i in 1:nrow(countries_capitals_and_more)) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
print(country$country)
print(exports_ukr_x$obs)
test_country_fu <- exports_ukr_x$obs
if(nrow(exports_ukr_x) != "0" && nrow(imports_ukr_x)[1] != "0" && nrow(tb_ukr_x)[1] != "0") {
trade_datalist[length(trade_datalist)+1] <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
}
}
return(trade_datalist)
}
countries_capitals_trade <- do.call(rbind, getTradeList())
getTradeList <- function(i) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
print(country$country)
print(exports_ukr_x$obs)
test_country_fu <- exports_ukr_x$obs
if(nrow(exports_ukr_x) != "0" && nrow(imports_ukr_x)[1] != "0" && nrow(tb_ukr_x)[1] != "0") {
trade_datalist[length(trade_datalist)+1] <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
}
}
trade_datalist <- list()
for (i in 1:nrow(countries_capitals_and_more)) {
getTradeList(i)
}
countries_capitals_and_more[-71]
countries_capitals_and_more[-c(71)]
countries_capitals_and_more?
?countries_capitals_and_more
countries_capitals_and_more <- countries_capitals_and_more[-c(71,)]
countries_capitals_and_more <- countries_capitals_and_more[-c(71),]
countries_capitals_and_more
trade_datalist <- list()
for (i in 1:nrow(countries_capitals_and_more)) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
print(country$country)
print(exports_ukr_x$obs)
test_country_fu <- exports_ukr_x$obs
if(nrow(exports_ukr_x) != "0" && nrow(imports_ukr_x)[1] != "0" && nrow(tb_ukr_x)[1] != "0") {
trade_datalist[length(trade_datalist)+1] <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
}
}
countries_capitals_trade <- do.call(rbind, trade_datalist)
countries_capitals_trade
View(countries_capitals_trade)
View(trade_datalist)
trade_datalist[[1]]
trade_datalist <- list()
for (i in 1:nrow(countries_capitals_and_more)) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
if(nrow(exports_ukr_x) != "0" && nrow(imports_ukr_x)[1] != "0" && nrow(tb_ukr_x)[1] != "0") {
data_frame_test <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
print(data_frame_test)
trade_datalist[length(trade_datalist)+1] <- data_frame_test
}
}
trade_datalist <- list()
for (i in 1:nrow(countries_capitals_and_more)) {
print(i)
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
exports_ukr_x <- filter(exports_ukr, counterpart_area == country$iso2 & frequency == "A")
imports_ukr_x <- filter(imports_ukr, counterpart_area == country$iso2 & frequency == "A")
tb_ukr_x <- filter(tb_ukr, counterpart_area == country$iso2 & frequency == "A")
if(nrow(exports_ukr_x) != "0" && nrow(imports_ukr_x)[1] != "0" && nrow(tb_ukr_x)[1] != "0") {
data_frame_test <- data.frame(language = country$language,
country = country$country,
capital = country$capital,
exports = exports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
imports = imports_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])],
balance = tb_ukr_x$obs[[1]][[2]][nrow(exports_ukr_x$obs[[1]])])
print(data_frame_test)
trade_datalist[[length(trade_datalist)+1]] <- data_frame_test
}
}
countries_capitals_trade <- do.call(rbind, trade_datalist)
library("rjson")
df_geocode_kiew <- fromJSON(file = "https://api.myptv.com/geocoding/v1/locations/by-text?searchText=Kiew&apiKey=NTA1NjJmNjQ4MGNkNDc0MmFlM2IzMjJiZGM3ZDI1ZjU6MGM1NzUyZTgtMzE3ZC00Nzg0LWJiODQtMTY5OGJkNzQxYTlj")
coordinates_kiew <- c(df_geocode_kiew$locations[[1]]$referencePosition$latitude, df_geocode_kiew$locations[[1]]$referencePosition$longitude)
for (i in countries_capitals_and_more) {
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
geocode_country <- fromJSON(file = capture.output(cat("https://api.myptv.com/geocoding/v1/locations/by-text?searchText=",
country$capital,
"&apiKey=NTA1NjJmNjQ4MGNkNDc0MmFlM2IzMjJiZGM3ZDI1ZjU6MGM1NzUyZTgtMzE3ZC00Nzg0LWJiODQtMTY5OGJkNzQxYTlj",
sep = "")))
coordinates_berlin <- c(geocode_country$locations[[1]]$referencePosition$latitude, geocode_country$locations[[1]]$referencePosition$longitude)
distance_url <- capture.output(cat('https://api.distancematrix.ai/maps/api/distancematrix/json?origins=',
coordinates_kiew[1],',',coordinates_kiew[2],
'&destinations=',coordinates_capital[1],',',coordinates_capital[2],
'&key=PLYEuZwg3IgiJPUOvpIS91prJ7jLB', sep = ""))
distance <- fromJSON(file = distance_url)
}
for (i in countries_capitals_and_more) {
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
geocode_country <- fromJSON(file = capture.output(cat("https://api.myptv.com/geocoding/v1/locations/by-text?searchText=",
country$capital,
"&apiKey=NTA1NjJmNjQ4MGNkNDc0MmFlM2IzMjJiZGM3ZDI1ZjU6MGM1NzUyZTgtMzE3ZC00Nzg0LWJiODQtMTY5OGJkNzQxYTlj",
sep = "")))
coordinates_berlin <- c(geocode_country$locations[[1]]$referencePosition$latitude, geocode_country$locations[[1]]$referencePosition$longitude)
distance_url <- capture.output(cat('https://api.distancematrix.ai/maps/api/distancematrix/json?origins=',
coordinates_kiew[1],',',coordinates_kiew[2],
'&destinations=',coordinates_capital[1],',',coordinates_capital[2],
'&key=PLYEuZwg3IgiJPUOvpIS91prJ7jLB', sep = ""))
distance <- fromJSON(file = distance_url)
}
df_geocode_kiew <- fromJSON(file = "https://api.myptv.com/geocoding/v1/locations/by-text?searchText=Kiew&apiKey=NTA1NjJmNjQ4MGNkNDc0MmFlM2IzMjJiZGM3ZDI1ZjU6MGM1NzUyZTgtMzE3ZC00Nzg0LWJiODQtMTY5OGJkNzQxYTlj")
coordinates_kiew <- c(df_geocode_kiew$locations[[1]]$referencePosition$latitude, df_geocode_kiew$locations[[1]]$referencePosition$longitude)
for (i in countries_capitals_and_more) {
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
geocode_country <- fromJSON(file = capture.output(cat("https://api.myptv.com/geocoding/v1/locations/by-text?searchText=",
country$capital,
"&apiKey=NTA1NjJmNjQ4MGNkNDc0MmFlM2IzMjJiZGM3ZDI1ZjU6MGM1NzUyZTgtMzE3ZC00Nzg0LWJiODQtMTY5OGJkNzQxYTlj",
sep = "")))
coordinates_berlin <- c(geocode_country$locations[[1]]$referencePosition$latitude, geocode_country$locations[[1]]$referencePosition$longitude)
distance_url <- capture.output(cat('https://api.distancematrix.ai/maps/api/distancematrix/json?origins=',
coordinates_kiew[1],',',coordinates_kiew[2],
'&destinations=',coordinates_capital[1],',',coordinates_capital[2],
'&key=PLYEuZwg3IgiJPUOvpIS91prJ7jLB', sep = ""))
distance <- fromJSON(file = distance_url)
print(distance)
}
for (i in countries_capitals_and_more) {
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
geocode_country <- fromJSON(file = capture.output(cat("https://api.myptv.com/geocoding/v1/locations/by-text?searchText=",
country$capital,
"&apiKey=NTA1NjJmNjQ4MGNkNDc0MmFlM2IzMjJiZGM3ZDI1ZjU6MGM1NzUyZTgtMzE3ZC00Nzg0LWJiODQtMTY5OGJkNzQxYTlj",
sep = "")))
coordinates_capital <- c(geocode_country$locations[[1]]$referencePosition$latitude, geocode_country$locations[[1]]$referencePosition$longitude)
distance_url <- capture.output(cat('https://api.distancematrix.ai/maps/api/distancematrix/json?origins=',
coordinates_kiew[1],',',coordinates_kiew[2],
'&destinations=',coordinates_capital[1],',',coordinates_capital[2],
'&key=PLYEuZwg3IgiJPUOvpIS91prJ7jLB', sep = ""))
distance <- fromJSON(file = distance_url)
print(distance)
}
for (i in countries_capitals_and_more) {
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
geocode_country <- fromJSON(file = capture.output(cat("https://api.myptv.com/geocoding/v1/locations/by-text?searchText=",
country$capital,
"&apiKey=NTA1NjJmNjQ4MGNkNDc0MmFlM2IzMjJiZGM3ZDI1ZjU6MGM1NzUyZTgtMzE3ZC00Nzg0LWJiODQtMTY5OGJkNzQxYTlj",
sep = "")))
coordinates_capital <- c(geocode_country$locations[[1]]$referencePosition$latitude, geocode_country$locations[[1]]$referencePosition$longitude)
print("middle")
distance_url <- capture.output(cat('https://api.distancematrix.ai/maps/api/distancematrix/json?origins=',
coordinates_kiew[1],',',coordinates_kiew[2],
'&destinations=',coordinates_capital[1],',',coordinates_capital[2],
'&key=PLYEuZwg3IgiJPUOvpIS91prJ7jLB', sep = ""))
distance <- fromJSON(file = distance_url)
print(distance)
}
install.packages("httr")
install.packages("httr")
library("httr")
install.packages("httr")
library("httr")
for (i in countries_capitals_and_more) {
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
geocode_country <- fromJSON(file = capture.output(cat("https://api.myptv.com/geocoding/v1/locations/by-text?searchText=",
country$capital,
"&apiKey=NTA1NjJmNjQ4MGNkNDc0MmFlM2IzMjJiZGM3ZDI1ZjU6MGM1NzUyZTgtMzE3ZC00Nzg0LWJiODQtMTY5OGJkNzQxYTlj",
sep = "")))
coordinates_capital <- c(geocode_country$locations[[1]]$referencePosition$latitude, geocode_country$locations[[1]]$referencePosition$longitude)
print("middle")
distance_url <- capture.output(cat('https://api.distancematrix.ai/maps/api/distancematrix/json?origins=',
coordinates_kiew[1],',',coordinates_kiew[2],
'&destinations=',coordinates_capital[1],',',coordinates_capital[2],
'&key=PLYEuZwg3IgiJPUOvpIS91prJ7jLB', sep = ""))
url <- "https://distance-calculator.p.rapidapi.com/distance/simple"
queryString <- list(
lat_1 = coordinates_kiew[1],
long_1 = coordinates_kiew[2],
lat_2 = coordinates_capital[1],
long_2 = coordinates_capital[2],
unit = "kilometers",
decimal_places = "2"
)
response <- VERB("GET", url, add_headers('X-RapidAPI-Host' = 'distance-calculator.p.rapidapi.com', 'X-RapidAPI-Key' = 'SIGN-UP-FOR-KEY'), query = queryString, content_type("application/octet-stream"))
content(response, "text")
distance <- fromJSON(file = distance_url)
print(responose)
}
for (i in countries_capitals_and_more) {
country <- data.frame(language = countries_capitals_and_more[i, "language"],
country = countries_capitals_and_more[i, "country"],
iso2 = countries_capitals_and_more[i, "iso2"],
capital = countries_capitals_and_more[i, "capital"])
geocode_country <- fromJSON(file = capture.output(cat("https://api.myptv.com/geocoding/v1/locations/by-text?searchText=",
country$capital,
"&apiKey=NTA1NjJmNjQ4MGNkNDc0MmFlM2IzMjJiZGM3ZDI1ZjU6MGM1NzUyZTgtMzE3ZC00Nzg0LWJiODQtMTY5OGJkNzQxYTlj",
sep = "")))
coordinates_capital <- c(geocode_country$locations[[1]]$referencePosition$latitude, geocode_country$locations[[1]]$referencePosition$longitude)
print("middle")
queryString <- list(
lat_1 = coordinates_kiew[1],
long_1 = coordinates_kiew[2],
lat_2 = coordinates_capital[1],
long_2 = coordinates_capital[2],
unit = "kilometers",
decimal_places = "2"
)
response <- VERB("GET", url, add_headers('X-RapidAPI-Host' = 'distance-calculator.p.rapidapi.com', 'X-RapidAPI-Key' = 'SIGN-UP-FOR-KEY'), query = queryString, content_type("application/octet-stream"))
content(response, "text")
distance <- fromJSON(file = distance_url)
print(response)
}
